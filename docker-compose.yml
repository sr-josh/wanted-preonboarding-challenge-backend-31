version: '3.8'
services:
  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: wanted
    ports:
      - "5432:5432"
    volumes:
      - ./data:/docker-entrypoint-initdb.d/
      # - challenge_db_data:/var/lib/postgresql/data
  
    # Debezium CDC 위한 설정 추가
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"

  web:
      build: .
      container_name: fastapi_app
      command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      volumes:
        - .:/app
      ports:
        - "8000:8000"
      depends_on:
        - db

  # Zookeeper - Kafka 클러스터 관리리
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka - 메시지 브로커
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # 필요한 토픽 자동 생성

  # Kafka UI - Kafka 모니터링, 관리
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8989:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # Debezium - 데이터베이스 변경 데이터를 실시간으로 캡처해 Kafka 등으로 전달하는 CDC(Change Data Capture) 플랫폼
  # Debezium Connect - 데이터베이스 변경 사항을 Kafka로 스트리밍하는 Kafka Connect 기반 커넥터, CDC 이벤트 발행
  debezium-connect:
    image: debezium/connect:2.7.3.Final
    container_name: debezium-connect
    depends_on:
      - kafka
      - db
    ports:
      - "8083:8083"
    volumes:
      - ./debezium-libs:/kafka/connect/debezium-libs
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      ENABLE_DEBEZIUM_SCRIPTING: "true"
      CONNECT_METRICS_ENABLED: "false"
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote=false"

# Docker가 관리하는 named volume을 생성
volumes:
  challenge_db_data:
  kafka_data: