{
  "name": "product-connector",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "database.hostname": "postgres-db",
    "database.port": "5432",
    "database.user": "challenge_user",
    "database.password": "challenge1234",
    "database.dbname": "challenge",
    "topic.prefix": "product",
    "slot.name": "product_slot",
    "plugin.name": "pgoutput",
    "snapshot.mode": "initial",
    "table.include.list": "public.products,public.product_prices,public.product_categories,public.product_tags,public.product_details,public.reviews,public.product_option_groups",

    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": "false",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schemas.enable": "false",

    "message.key.columns": "public.products:id;public.product_prices:product_id;public.product_categories:product_id;public.product_tags:product_id;public.product_details:product_id;public.reviews:product_id;public.product_option_groups:product_id",

    "transforms": "RenameProductKey,RouteByTable",

    "transforms.RenameProductKey.type": "org.apache.kafka.connect.transforms.ReplaceField$Key",
    "transforms.RenameProductKey.renames": "id:product_id",
    "transforms.RenameProductKey.predicate": "isProducts",

    "transforms.RouteByTable.type": "org.apache.kafka.connect.transforms.RegexRouter",
    "transforms.RouteByTable.regex": "product.public.(.*)",
    "transforms.RouteByTable.replacement": "product-events",

    "predicates": "isProducts",
    "predicates.isProducts.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
    "predicates.isProducts.pattern": ".*products$"
  }
}